找完工作后，我10月20号抵达东莞，22号开始正式上班。
我们这次来的主要任务是开始编写pon的自动化，要把之前的tcl语言全部转成ruby语言。第一周，我主要是在整理命令行，这是写自动化脚本之前的准备工作。因为我们所有的自动化脚本都是通过在串口输入命令行来控制ont和olt的，所以我们把命令行整理成脚本可以识别的格式。比如我们在测试过程中最常用的查询PON口统计的命令：gmac display dfx pon-statistics 0 0（第一个0表示oltid，第二个0表示模式），我要把这个命令整理成这样的格式：
名称：gmac_display_dfx_pon_statistics
格式：gmac display dfx pon-statistics %oltid% %type%
描述：查询olt的PON口统计
模式：enable
版本：FiberStarV100R005C10
命令字：gmac_display_dfx_pon_statistics
其中，名称是这个命令的名称，多个字符之间要用下划线“_”分隔开来，因为脚本不能识别“-”。
格式就是输入到串口上的格式，需要传递的参数用两个百分号包围起来。“{}”大括号包含的是可选参数，“[]”中括号包含的是可选参数部分，“|”或符号分开的部分表示多选一部分。如果没有“{}”、“[]”符号，那也表示这是个必传参数。上面这个命令行的格式表示“oltid”和“type”都是必传参数。由于格式是直接在串口上输入的，所以形式应该和命令行一致，不能更改字符间的符号。
描述就是这个命令行的意义，工作人员通过命令行的描述来选用合适的命令行来编写脚本。
模式用来区别olt和ont的命令行，olt的用“enable”表示，ont的用“user”来表示。
版本就是被测芯片的版本呢。
命令字为了方便，所以和名称一样，这是脚本中要使用的字段。脚本通过写的命令字来查询具体的格式，再输出到串口上。
我主要负责GPON的OLT端的命令，总数有将近四百个，整理好之后，把excel表格发给同事，他在用工具把表格上传到我们部门的命令行网站上。每次执行脚本的时候，平台就会通过写的脚本到网站上查询对应的命令。
命令行整理好之后，我们开始搭建我们自己的环境。由于所有的环境都要从深圳搬到东莞，所以需要根据实验室的设计重新搭建环境。因为在深圳的时候已经对环境有所熟悉，所以这并没有花费太长的时间。环境搭好之后，就要进行调试，因为从深圳运到东莞的板子并没有做好标记，所以我们也不知道那块板子是好的，那块板子是有问题的。唯一的办法就是把每块板子换到环境上去，加载最新的版本和环境参数，观察ont能否正常上线。环境调试完成之后，就可以正式开始自动化的编写了。
编写自动化其实就是把我之前手测的用例写成自动化，方便以后其他芯片的测试。我的任务是进行注册管理、DBA、FEC、AES、节能部分的自动化编写。自动化的思想很简单，就是根据用例的步骤，把之前手测的操作写成自动化。
自动化用例一般分成三个部分：prepare、process、cleanup。prepare一般用来执行预置条件，不如配置DBA下发周期，开关FEC、AES加密等。process就是测试步骤的主要部分。cleanup里存放恢复配置的操作。每一个执行命令由三个字段组成，第一个字段用来判断在olt还是在ont执行命令，第二个字段是所执行的命令函数所在的类名，第三个字段是函数名（和命令字一致）。在函数名后面用小括号存放需要传递的参数。需要注意的一点就是，在process里的所有命令都需要赋值给一个变量，在每个步骤最后都要用assert（断言）判断每个命令是否执行成功。
在编写自动化的过程中，发现了很多问题。下面举两个具有代表性的例子分析一下。
在刚开始测试的时候，经常会发现连跑多个用例的时候，某一个用例之后的所有用例都会失败。通过自己的研究，我发现是因为在执行process的某一个异常操作的时候，脚本报错，自动化终止，并没有执行process最后的恢复操作，从而导致后面的用例都会受到这个异常操作的影响。这个问题的解决方法就是把所有异常操作的恢复步骤在cleanup里执行一遍。因为cleanup是脚本执行结束后必须跑的步骤，即使用例报错，也依然会执行。解决了这个问题之后我的效率得到了很大的提升。
在执行用例的过程中，经常要对统计进行比对，在比对的过程中经常会报错。一开始我也不知道为什么会报错，在询问了同时之后，才知道在脚本中捕获到的统计都是String类型的，不能直接与int类型的数字进行比较。我们利用Git库里的方法String.to_i就可以吧字符串转换成int型的数字，这样就可以顺利的比较统计。
经过了将近一个月的自动化编写，我完成了大部分的用例编写，代码能力也得到了一定的提升。在接下来的一个月里，在完成工作的基础上，我主要的精力要放在研究论文课题上面。通过平时的学习发现问题，然后在询问同时解决问题，希望接下来的一个月里。我的论文研究能有一定的进展。
